<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.owner.FrcsOrderMapper">
	
	<resultMap type="orderVO" id="orderMap">
		<id property="frcsOrderNo" column="frcsorder_no"/>
		<result property="frcsOrderDate" column="frcsorder_date"/>
		<result property="frcsOrderAmt" column="frcsorder_amt"/>
		<result property="frcsOrderConfm" column="frcsorder_confm"/>
		<result property="frcsOrderConfmDate" column="frcsorder_confmdate"/>
		<result property="frcsOrderReturn" column="frcsorder_return"/>
		<result property="autoOrderNo" column="autoorder_no"/>
		<result property="vdprodCd" column="vdprod_cd"/>
		<result property="frcsId" column="frcs_id"/>
		<collection property="orderDetailList" resultMap="orderDetailMap"/>
	</resultMap>
	
	<resultMap type="orderDetailVO" id="orderDetailMap">
		<id property="frcsOrderNo" column="frcsorder_no"/>
		<id property="vdprodCd" column="vdprod_cd"/>
		<result property="frcsOrderQy" column="frcsorder_qy"/>
		<result property="hdforwardPrice" column="hdforward_price"/>
	</resultMap>
	
	<!-- include 처리를 위한 동적 쿼리 -->
	<sql id="inventSearch">
		<if test="searchType !=null and searchType== 'vdprodName'">
			and (h.vdprod_name like '%'||#{searchWord}||'%')
		</if>
		<if test="searchType !=null and searchType== 'vdprodCd'">
			and (h.vdprod_cd like '%'||#{searchWord}||'%')		
		</if>
	</sql>
	
	<select id="selectOrderCount" parameterType="ownerPagingVO" resultType="int">
		select count(f.vdprod_cd)
		from frcs_inventory f, head_inventory h, frcs_ownership o
		where f.vdprod_cd = h.vdprod_cd and o.mem_id = #{memId}
	</select>

	<select id="selectOrderList" parameterType="ownerPagingVO" resultType="inventVO">
		select 
			b.*
		from (
			select 
				a.*, row_number() over (order by a.vdprod_cd asc) rnum
			from(
				select h.vdprod_cd, h.vdprod_name, f.invntry_qy, f.proprt_qy, h.hdforward_price, f.frcs_id
				from frcs_inventory f, head_inventory h, frcs_ownership o
				where f.vdprod_cd = h.vdprod_cd 
				and o.mem_id = #{memId}
			    order by vdprod_cd asc
			)a
		)b	
		<![CDATA[	
			where b.rnum >= #{startRow} and b.rnum <= #{endRow}
		]]>
	</select>
	
	<select id="getInventList" parameterType="string" resultType="inventVO">
		select h.vdprod_cd, h.vdprod_name, f.invntry_qy, f.proprt_qy, h.hdforward_price, f.frcs_id
		from frcs_inventory f, head_inventory h, frcs_ownership o
		where f.vdprod_cd = h.vdprod_cd 
		and o.mem_id = #{memId}
	    order by vdprod_cd asc
	</select>
	
	<select id="inventSearch" parameterType="map" resultType="inventVO">
		select h.vdprod_cd, h.vdprod_name, f.invntry_qy, f.proprt_qy, h.hdforward_price, f.frcs_id
		from frcs_inventory f, head_inventory h, frcs_ownership o
		where f.vdprod_cd = h.vdprod_cd 
		and o.frcs_id = #{frcsId}
		<include refid="inventSearch"/>
	    order by vdprod_cd asc
	</select>
	
	<select id="getFrcsId" parameterType="string" resultType="string">
		select frcs_id
		from frcs_ownership
		where mem_id = #{memId}
	</select>
	
	<insert id="orderInsert" parameterType="orderVO" useGeneratedKeys="true">
		<selectKey keyProperty="frcsOrderNo" resultType="string" order="BEFORE">
			select 'o_'|| #{frcsId} || '_' ||to_char(seq_order.nextval, 'FM0000') from dual
		</selectKey>
		insert into frcsorder(
			frcsorder_no, frcsorder_date, frcsorder_amt, frcsorder_confm, frcs_id
		) values (
			#{frcsOrderNo}, sysdate, #{frcsOrderAmt}, '대기', #{frcsId}
		)
	</insert>
	
	<insert id="orderDetailInsert" parameterType="orderDetailVO" useGeneratedKeys="true">
		<selectKey keyProperty="frcsOrderNo" resultType="string" order="BEFORE">
			select 'o_'|| #{frcsId} || '_' ||to_char(seq_order.currval, 'FM0000') from dual
		</selectKey>
		insert into frcsorder_detail(
			frcsorder_no, vdprod_cd, frcsorder_qy, hdforward_price
		) values (
			#{frcsOrderNo}, #{vdprodCd}, #{frcsOrderQy}, #{hdforwardPrice}
		)
	</insert>
</mapper>