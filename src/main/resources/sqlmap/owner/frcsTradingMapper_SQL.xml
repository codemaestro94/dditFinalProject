<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.owner.FrcsTradingMapper">
	
	<sql id="inventSearch">
		<if test="searchType !=null and searchType== 'vdprodName'">
			and (h.vdprod_name like '%'||#{searchWord}||'%')
		</if>
		<if test="searchType !=null and searchType== 'vdprodCd'">
			and (h.vdprod_cd like '%'||upper(#{searchWord})||'%')		
		</if>
	</sql>
	
	<sql id="sendReceiveSearch">
		<if test="sendReceive !=null and sendReceive== 'all'">
			and t.frcs_id = #{frcsId} or frcs_id2 = #{frcsId}
		</if>
		<if test="sendReceive !=null and sendReceive== 'receive'">
			and frcs_id2 = #{frcsId}
		</if>
		<if test="sendReceive !=null and sendReceive== 'send'">
			and t.frcs_id = #{frcsId}
		</if>
	</sql>
	
	<sql id="progressSearch">
		<if test="progress !=null and progress=='all'">
			and trad_stts in('수락','거절','요청')
		</if>
		
		<if test="progress !=null and progress=='requesting'">
			and trad_stts = '요청'
		</if>
		
		<if test="progress !=null and progress=='completed'">
			and trad_stts = '수락'
		</if>
		
		<if test="progress !=null and progress=='refuse'">
			and trad_stts = '거절'
		</if>
	</sql>
	
	
	<!-- 내 가맹점 정보 조회 -->
	<select id="getLocation" parameterType="string" resultType="franchiseVO">
		select frcs_xmap, frcs_ymap, frcs_add1, frcs_name, frcs_id
		from franchise
		where frcs_id= #{frcsId}
	</select>

	<!-- 모든 가맹점 정보 조회 -->
	<select id="getAllFrcsList" resultType="franchiseVO">
		select frcs_xmap, frcs_ymap, frcs_name, frcs_id
		from franchise
	</select>
	
	<!-- 다른 가맹점 재고 현황 조회 -->
	<select id="getInventList" parameterType="map" resultType="inventVO">
		select invntry_qy, h.vdprod_cd, h.vdprod_name, fc.frcs_id, fc.frcs_name, frcs_add1
		from frcs_inventory f, head_inventory h, franchise fc
		where f.vdprod_cd = h.vdprod_cd and f.frcs_id = fc.frcs_id
		and fc.frcs_id = #{frcsId}
		<include refid="inventSearch"/>
	</select>
	
	<!-- 제품 코드별 가격 가져오기 -->
	<select id="getHdforwardPrice" parameterType="string" resultType="int">
		select hdforward_price
		from head_inventory
		where vdprod_cd = #{vdprodCd}
	</select>
	
	<!-- 트레이딩 신청 -->
	<insert id="tradingInsert" parameterType="tradVO" useGeneratedKeys="true">
		<selectKey keyProperty="tradNo" resultType="string" order="BEFORE">
			select 'tr_'|| to_char(seq_trad.nextval, 'FM000000') from dual
		</selectKey>
		insert into trading (trad_no, frcs_id, vdprod_cd, frcs_id2, trad_qy, trad_amt, trad_date, trad_stts)
		values(
			#{tradNo}, #{frcsId}, #{vdprodCd}, #{frcsId2}, #{tradQy}, #{tradAmt}, sysdate, '요청'
		)
	</insert>
	
	<select id="selectTradeCount" parameterType="ownerPagingVO" resultType="int">
		select count(trad_no)
		from trading
		where frcs_id = #{frcsId} or frcs_id2 = #{frcsId}
	</select>
	
	<!-- 트레이딩 신청 내역 페이징 2 -->
	<select id="selectTradingHistoryList" parameterType="ownerPagingVO" resultType="tradVO" >
		select 
			b.*
		from (
				select
					a.*, row_number() over(order by a.trad_date desc) rnum
				from(
					select trad_no, t.frcs_id, h.vdprod_cd, frcs_id2, trad_qy, trad_amt, trad_date, trad_stts, trad_rm, h.vdprod_name, frcs_name, 
					(select f.frcs_name from franchise f where t.frcs_id2 = f.frcs_id) as frcs_name2
					from trading t
					inner join head_inventory h on t.vdprod_cd = h.vdprod_cd
					inner join franchise f on t.frcs_id = f.frcs_id
					where 1=1
					<include refid="sendReceiveSearch"/>
					<include refid="progressSearch"/>
					
					order by trad_date desc
				)a		
			)b
		<![CDATA[	
		where b.rnum >= #{startRow} and b.rnum <= #{endRow}
		]]>
	</select>
	
	<!-- 트레이딩 재고 -처리 -->
	<update id="tradingMinus" parameterType="inventVO">
		update frcs_inventory
			set invntry_qy = invntry_qy - #{tradQy}
		where frcs_id = #{frcsId2} and vdprod_cd = #{vdprodCd}
	</update>
	
	<!-- 트레이딩 재고 + 처리 -->
	<update id="tradingPlus" parameterType="inventVO">
		update frcs_inventory
			set invntry_qy = invntry_qy + #{tradQy}
		where frcs_id = #{frcsId} and vdprod_cd = #{vdprodCd}
	</update>
	
	<!-- 상태 업데이트 -->
	<update id="updateStatus" parameterType="string">
		update trading
			set trad_stts = '수락'
		where trad_no = #{tradNo}
	</update>
	
	<!-- 트레이딩 거절 -->
	<update id="tradingRefuse" parameterType="tradVO">
		update trading
			set trad_stts = '거절',
				trad_rm = #{tradRm}
		where trad_no = #{tradNo}
	</update>
	
	
	<!-- 알림 -->
	<select id="getMemFrcs" parameterType="String" resultType="String">
	SELECT DISTINCT
    c.MEM_ID
	FROM
	    TRADING a
	LEFT OUTER JOIN TRADING b ON a.TRAD_NO = b.TRAD_NO
	LEFT OUTER JOIN FRCS_OWNERSHIP c ON a.frcs_id = c.FRCS_ID
	WHERE
	    a.frcs_id = #{frcsId}
	</select>   
	
	<select id="getReceiveMemId" parameterType="String" resultType="String">
	SELECT DISTINCT
	    c.MEM_ID
	FROM
	    TRADING a
	LEFT OUTER JOIN TRADING b ON a.TRAD_NO = b.TRAD_NO
	LEFT OUTER JOIN FRCS_OWNERSHIP c ON a.frcs_id2 = c.FRCS_ID
	WHERE
	    a.frcs_id2 = #{frcsId2}
	</select>
	
	<insert id="insertAlarm" parameterType="alarmVO">
	    INSERT INTO ALARM (
	        ALARM_NO, MEM_ID, ALARM_CONTENT, ALARM_DATE, ALARM_URL, RECEIVEMEM_ID, TBL_NAME, TBL_NO
	    ) VALUES (
	        SEQ_ALARM.NEXTVAL, #{memId}, '트레이딩 확인하기!', SYSDATE, '/owner/tradingList.do', #{receiveMemId}, #{tblName}, #{tblNo}
	    )
	</insert>
	
	<!-- 금일 요청된 트레이딩 개수 -->
	<select id="selectCount" parameterType="string" resultType="int">
		select count(trad_no)
		from trading
		where frcs_id2 = #{frcsId} and trunc(trad_date,'MM') = trunc(sysdate,'MM')
	</select>
	
	<!-- 요청 트레이딩 상세내역 -->
	<select id="getDetail" parameterType="inventVO" resultType="inventVO">
		select invntry_qy
		from frcs_inventory
		where vdprod_cd = #{vdprodCd} and frcs_id = #{frcsId}
	</select>
	
	<!-- 요청 트레이딩 상세내역 -->
	<select id="getReqDetail" parameterType="inventVO" resultType="inventVO">
		select invntry_qy
		from frcs_inventory
		where vdprod_cd = #{vdprodCd} and frcs_id = #{frcsId}
	</select>
	
</mapper>