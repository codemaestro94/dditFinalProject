package kr.or.ddit.controller.head;



import java.util.List;

import javax.inject.Inject;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.service.head.IMenuService;
import kr.or.ddit.vo.head.HeadPaginationInfoVO;
import kr.or.ddit.vo.head.MenuVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/head")
public class InformationController {
	
	@Inject
	private IMenuService menuService;

	@RequestMapping(value = "/menu.do", method=RequestMethod.GET)
	public String MenuList(
			@RequestParam(name="page", required = false, defaultValue = "1")int currentPage,
	        @RequestParam(required = false, defaultValue = "title") String searchType,
	        @RequestParam(required = false)String searchWord,
			Model model) {
	    HeadPaginationInfoVO<MenuVO> pagingVO = new HeadPaginationInfoVO<MenuVO>();
	    
	    // 검색이 이뤄지면 아래가 실행됨
	      if(StringUtils.isNotBlank(searchWord)) {
	         pagingVO.setSearchType(searchType);
	         pagingVO.setSearchWord(searchWord);
	         model.addAttribute("searchType", searchType);
	         model.addAttribute("searchWord", searchWord);
	      }
		
	    pagingVO.setCurrentPage(currentPage);   // startRow, endRow, startPage, endPage가 결정
	    int totalRecord = menuService.selectMenuCount(pagingVO);   // 총 게시글 수
	      
	    pagingVO.setTotalRecord(totalRecord);   // totalPage 결정
	    List<MenuVO> menuList =  menuService.selectMenuList(pagingVO);
	    pagingVO.setDataList(menuList);
	      
	    model.addAttribute("pagingVO",pagingVO);  
	      
		log.info("Menu(): 시작");
		return "head/information/menu";
	}
	
	@RequestMapping(value = "/menuDetail.do", method=RequestMethod.GET)
	public String MenuDetail(String menuCd, Model model) {
		MenuVO menuVO = menuService.selectMenu(menuCd);
		model.addAttribute("menu", menuVO);
		return "head/information/menu";
	}
}
